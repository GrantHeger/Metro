'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.5485
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<System.Data.Linq.Mapping.DatabaseAttribute(Name:="nftaalerts")>  _
Partial Public Class nftaDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("NFTA_RouteDB.My.MySettings.nftaalertsConnectionString2").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property AlertViews() As System.Data.Linq.Table(Of AlertView)
		Get
			Return Me.GetTable(Of AlertView)
		End Get
	End Property
	
	Public ReadOnly Property RouteCategoryViews() As System.Data.Linq.Table(Of RouteCategoryView)
		Get
			Return Me.GetTable(Of RouteCategoryView)
		End Get
	End Property
	
	Public ReadOnly Property AlertCategoryViews() As System.Data.Linq.Table(Of AlertCategoryView)
		Get
			Return Me.GetTable(Of AlertCategoryView)
		End Get
	End Property
	
	Public ReadOnly Property RouteViews() As System.Data.Linq.Table(Of RouteView)
		Get
			Return Me.GetTable(Of RouteView)
		End Get
	End Property
End Class

<Table(Name:="dbo.AlertView")>  _
Partial Public Class AlertView
	
	Private _Alert_Id As Integer
	
	Private _Category_Id As Integer
	
	Private _Status_Id As Integer
	
	Private _DateAdded As Date
	
	Private _MessageText As String
	
	Private _MessageEmail As String
	
	Private _IsArchived As Boolean
	
	Private _EndDate As System.Nullable(Of Date)
	
	Private _DisplayAlert As System.Nullable(Of Boolean)
	
	Private _Parent_Id As System.Nullable(Of Integer)
	
	Private _CategoryName As String
	
	Private _CategoryDescription As String
	
	Private _CategoryCode As String
	
	Private _IsPublic As System.Nullable(Of Boolean)
	
	Private _StatusName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Column(Storage:="_Alert_Id", DbType:="Int NOT NULL")>  _
	Public Property Alert_Id() As Integer
		Get
			Return Me._Alert_Id
		End Get
		Set
			If ((Me._Alert_Id = value)  _
						= false) Then
				Me._Alert_Id = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_Category_Id", DbType:="Int NOT NULL")>  _
	Public Property Category_Id() As Integer
		Get
			Return Me._Category_Id
		End Get
		Set
			If ((Me._Category_Id = value)  _
						= false) Then
				Me._Category_Id = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_Status_Id", DbType:="Int NOT NULL")>  _
	Public Property Status_Id() As Integer
		Get
			Return Me._Status_Id
		End Get
		Set
			If ((Me._Status_Id = value)  _
						= false) Then
				Me._Status_Id = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_DateAdded", DbType:="DateTime NOT NULL")>  _
	Public Property DateAdded() As Date
		Get
			Return Me._DateAdded
		End Get
		Set
			If ((Me._DateAdded = value)  _
						= false) Then
				Me._DateAdded = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_MessageText", DbType:="VarChar(500)")>  _
	Public Property MessageText() As String
		Get
			Return Me._MessageText
		End Get
		Set
			If (String.Equals(Me._MessageText, value) = false) Then
				Me._MessageText = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_MessageEmail", DbType:="VarChar(MAX)")>  _
	Public Property MessageEmail() As String
		Get
			Return Me._MessageEmail
		End Get
		Set
			If (String.Equals(Me._MessageEmail, value) = false) Then
				Me._MessageEmail = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_IsArchived", DbType:="Bit NOT NULL")>  _
	Public Property IsArchived() As Boolean
		Get
			Return Me._IsArchived
		End Get
		Set
			If ((Me._IsArchived = value)  _
						= false) Then
				Me._IsArchived = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_EndDate", DbType:="Date")>  _
	Public Property EndDate() As System.Nullable(Of Date)
		Get
			Return Me._EndDate
		End Get
		Set
			If (Me._EndDate.Equals(value) = false) Then
				Me._EndDate = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_DisplayAlert", DbType:="Bit")>  _
	Public Property DisplayAlert() As System.Nullable(Of Boolean)
		Get
			Return Me._DisplayAlert
		End Get
		Set
			If (Me._DisplayAlert.Equals(value) = false) Then
				Me._DisplayAlert = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_Parent_Id", DbType:="Int")>  _
	Public Property Parent_Id() As System.Nullable(Of Integer)
		Get
			Return Me._Parent_Id
		End Get
		Set
			If (Me._Parent_Id.Equals(value) = false) Then
				Me._Parent_Id = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_CategoryName", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property CategoryName() As String
		Get
			Return Me._CategoryName
		End Get
		Set
			If (String.Equals(Me._CategoryName, value) = false) Then
				Me._CategoryName = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_CategoryDescription", DbType:="VarChar(250)")>  _
	Public Property CategoryDescription() As String
		Get
			Return Me._CategoryDescription
		End Get
		Set
			If (String.Equals(Me._CategoryDescription, value) = false) Then
				Me._CategoryDescription = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_CategoryCode", DbType:="VarChar(50)")>  _
	Public Property CategoryCode() As String
		Get
			Return Me._CategoryCode
		End Get
		Set
			If (String.Equals(Me._CategoryCode, value) = false) Then
				Me._CategoryCode = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_IsPublic", DbType:="Bit")>  _
	Public Property IsPublic() As System.Nullable(Of Boolean)
		Get
			Return Me._IsPublic
		End Get
		Set
			If (Me._IsPublic.Equals(value) = false) Then
				Me._IsPublic = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_StatusName", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property StatusName() As String
		Get
			Return Me._StatusName
		End Get
		Set
			If (String.Equals(Me._StatusName, value) = false) Then
				Me._StatusName = value
			End If
		End Set
	End Property
End Class

<Table(Name:="dbo.RouteCategoryView")>  _
Partial Public Class RouteCategoryView
	
	Private _Category_Id As Integer
	
	Private _CategoryName As String
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Column(Storage:="_Category_Id", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property Category_Id() As Integer
		Get
			Return Me._Category_Id
		End Get
		Set
			If ((Me._Category_Id = value)  _
						= false) Then
				Me._Category_Id = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_CategoryName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property CategoryName() As String
		Get
			Return Me._CategoryName
		End Get
		Set
			If (String.Equals(Me._CategoryName, value) = false) Then
				Me._CategoryName = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me._SortOrder = value
			End If
		End Set
	End Property
End Class

<Table(Name:="dbo.AlertCategoryView")>  _
Partial Public Class AlertCategoryView
	
	Private _Category_Id As Integer
	
	Private _Parent_Id As System.Nullable(Of Integer)
	
	Private _CategoryName As String
	
	Private _CategoryDescription As String
	
	Private _CategoryCode As String
	
	Private _IsPublic As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Column(Storage:="_Category_Id", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property Category_Id() As Integer
		Get
			Return Me._Category_Id
		End Get
		Set
			If ((Me._Category_Id = value)  _
						= false) Then
				Me._Category_Id = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_Parent_Id", DbType:="Int")>  _
	Public Property Parent_Id() As System.Nullable(Of Integer)
		Get
			Return Me._Parent_Id
		End Get
		Set
			If (Me._Parent_Id.Equals(value) = false) Then
				Me._Parent_Id = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_CategoryName", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property CategoryName() As String
		Get
			Return Me._CategoryName
		End Get
		Set
			If (String.Equals(Me._CategoryName, value) = false) Then
				Me._CategoryName = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_CategoryDescription", DbType:="VarChar(250)")>  _
	Public Property CategoryDescription() As String
		Get
			Return Me._CategoryDescription
		End Get
		Set
			If (String.Equals(Me._CategoryDescription, value) = false) Then
				Me._CategoryDescription = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_CategoryCode", DbType:="VarChar(50)")>  _
	Public Property CategoryCode() As String
		Get
			Return Me._CategoryCode
		End Get
		Set
			If (String.Equals(Me._CategoryCode, value) = false) Then
				Me._CategoryCode = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_IsPublic", DbType:="Bit")>  _
	Public Property IsPublic() As System.Nullable(Of Boolean)
		Get
			Return Me._IsPublic
		End Get
		Set
			If (Me._IsPublic.Equals(value) = false) Then
				Me._IsPublic = value
			End If
		End Set
	End Property
End Class

<Table(Name:="dbo.RouteView")>  _
Partial Public Class RouteView
	
	Private _RouteId As Integer
	
	Private _Category_Id As Integer
	
	Private _RouteName As String
	
	Private _RouteNumber As String
	
	Private _Status As Boolean
	
	Private _Copy As String
	
	Private _Spanish As System.Nullable(Of Boolean)
	
	Private _English As System.Nullable(Of Boolean)
	
	Private _Pages As System.Nullable(Of Integer)
	
	Private _Map As System.Nullable(Of Boolean)
	
	Private _Note As String
	
	Private _CategoryName As String
	
	Private _Revised As String
	
	Private _TimeTable As System.Nullable(Of Boolean)
	
	Private _Preview As String
	
	Private _Changes As String
	
	Private _StatusColor As System.Nullable(Of Integer)
	
	Private _StatusNote As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Column(Storage:="_RouteId", DbType:="Int NOT NULL")>  _
	Public Property RouteId() As Integer
		Get
			Return Me._RouteId
		End Get
		Set
			If ((Me._RouteId = value)  _
						= false) Then
				Me._RouteId = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_Category_Id", DbType:="Int NOT NULL")>  _
	Public Property Category_Id() As Integer
		Get
			Return Me._Category_Id
		End Get
		Set
			If ((Me._Category_Id = value)  _
						= false) Then
				Me._Category_Id = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_RouteName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property RouteName() As String
		Get
			Return Me._RouteName
		End Get
		Set
			If (String.Equals(Me._RouteName, value) = false) Then
				Me._RouteName = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_RouteNumber", DbType:="NVarChar(10)")>  _
	Public Property RouteNumber() As String
		Get
			Return Me._RouteNumber
		End Get
		Set
			If (String.Equals(Me._RouteNumber, value) = false) Then
				Me._RouteNumber = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_Status", DbType:="Bit NOT NULL")>  _
	Public Property Status() As Boolean
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me._Status = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_Copy", DbType:="NVarChar(MAX)")>  _
	Public Property Copy() As String
		Get
			Return Me._Copy
		End Get
		Set
			If (String.Equals(Me._Copy, value) = false) Then
				Me._Copy = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_Spanish", DbType:="Bit")>  _
	Public Property Spanish() As System.Nullable(Of Boolean)
		Get
			Return Me._Spanish
		End Get
		Set
			If (Me._Spanish.Equals(value) = false) Then
				Me._Spanish = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_English", DbType:="Bit")>  _
	Public Property English() As System.Nullable(Of Boolean)
		Get
			Return Me._English
		End Get
		Set
			If (Me._English.Equals(value) = false) Then
				Me._English = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_Pages", DbType:="Int")>  _
	Public Property Pages() As System.Nullable(Of Integer)
		Get
			Return Me._Pages
		End Get
		Set
			If (Me._Pages.Equals(value) = false) Then
				Me._Pages = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_Map", DbType:="Bit")>  _
	Public Property Map() As System.Nullable(Of Boolean)
		Get
			Return Me._Map
		End Get
		Set
			If (Me._Map.Equals(value) = false) Then
				Me._Map = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_Note", DbType:="NVarChar(MAX)")>  _
	Public Property Note() As String
		Get
			Return Me._Note
		End Get
		Set
			If (String.Equals(Me._Note, value) = false) Then
				Me._Note = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_CategoryName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property CategoryName() As String
		Get
			Return Me._CategoryName
		End Get
		Set
			If (String.Equals(Me._CategoryName, value) = false) Then
				Me._CategoryName = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_Revised", DbType:="NVarChar(MAX)")>  _
	Public Property Revised() As String
		Get
			Return Me._Revised
		End Get
		Set
			If (String.Equals(Me._Revised, value) = false) Then
				Me._Revised = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_TimeTable", DbType:="Bit")>  _
	Public Property TimeTable() As System.Nullable(Of Boolean)
		Get
			Return Me._TimeTable
		End Get
		Set
			If (Me._TimeTable.Equals(value) = false) Then
				Me._TimeTable = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_Preview", DbType:="NChar(50)")>  _
	Public Property Preview() As String
		Get
			Return Me._Preview
		End Get
		Set
			If (String.Equals(Me._Preview, value) = false) Then
				Me._Preview = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_Changes", DbType:="NVarChar(MAX)")>  _
	Public Property Changes() As String
		Get
			Return Me._Changes
		End Get
		Set
			If (String.Equals(Me._Changes, value) = false) Then
				Me._Changes = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_StatusColor", DbType:="Int")>  _
	Public Property StatusColor() As System.Nullable(Of Integer)
		Get
			Return Me._StatusColor
		End Get
		Set
			If (Me._StatusColor.Equals(value) = false) Then
				Me._StatusColor = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_StatusNote", DbType:="NVarChar(MAX)")>  _
	Public Property StatusNote() As String
		Get
			Return Me._StatusNote
		End Get
		Set
			If (String.Equals(Me._StatusNote, value) = false) Then
				Me._StatusNote = value
			End If
		End Set
	End Property
End Class
